<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAF8PAABfDwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAACAAEAAgABAAIAAQACAAGcAgAB/wIAAcQCAAEQAgABAAIAAQECAAEAAgABAAAA
        AAAAAAAAAgABAAIAAQECAAEAAgABCwIAAbsCAAH/AgABsgIAAQUCAAEAAgABAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQMCAAEAAgABPgIAAf8CAAH6AgAB/wIAAZMCAAEAAgABAwIA
        AQACAAEAAAAAAAAAAAACAAEAAgABBAIAAQACAAFbAgAB/wIAAfkCAAH/AgABTgIAAQACAAEDAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAEAAgABAgIAAQACAAEnAgAB+AIAAf8CAAH9AgAB/wIA
        AT4CAAEAAgABAwIAAQACAAEAAAAAAAIAAQACAAEEAgABAAIAAZACAAH/AgAB+QIAAf8CAAFGAgABAAIA
        AQMCAAIAAgACAAIAAQACAAEAAgABAAAAAAAAAAAAAgABAAIAAQACAAEAAgABBgIAAQACAAGMAgAB/wIA
        AfkCAAH/AgAByQIAAQMCAAEAAgABAAIAAQACAAEAAgABAAIAAQICAAEAAgABvgIAAf8CAAH/AgAB9gIA
        AR8CAAEAAgABBQIAAQMCAAEDAgABAAIAAQACAAEAAAAAAAAAAAADAAEAAwABAAMAAQACAAEBAgABAAIA
        AQgCAAHRAgAB/wIAAfkCAAH/AgABcwIAAQACAAEEAgABAAIAAQACAAEBAgABAAIAAQwCAAHlAgAB/wIA
        Af8CAAHSAQABAAQAAQACAAEAAwABAAMAAQADAAEAAwABAAMAAQAAAAAAAAAAAAIAAQECAAEAAgABEwIA
        AaICAAGrAgABngIAAdECAAH/AgAB/QIAAf8CAAH4AgABOAIAAQACAAECAgABAAIAAQICAAEAAgABLgIA
        Af8CAAH+AgAB/wIAAeYCAAGjAgABqAIAAacCAAGpAgABogIAARMCAAEAAgABAQAAAAAAAAAAAgABAQIA
        AQACAAEPAgAB6wIAAf8CAAH+AgAB/wIAAf8CAAH/AgAB/AIAAf8CAAGsAgABAAIAAQICAAEAAgABBAIA
        AQACAAFZAgAB/wIAAfwCAAH/AgAB/wIAAf8CAAH/AgAB/gIAAf8CAAHrAgABDwIAAQACAAEBAAAAAAAA
        AAACAAEAAgABAAIAAQACAAHRAgAB/wIAAfkCAAH9AgAB/wIAAf8CAAH/AgAB/AIAAf8CAAFMAgABAAIA
        AQMCAAEGAgABAAIAAZICAAH/AgAB+wIAAf8CAAH+AgAB+wIAAfsCAAH5AgAB/wIAAdECAAEAAgABAAIA
        AQAAAAAAAAAAAAIAAQACAAECAgABAAIAAbsCAAH/AgAB/AIAAf8CAAH/AgAB/wIAAf8CAAH7AgAB/wIA
        AZwCAAEAAgABCAIAAQACAAFZAgAB/wIAAf8CAAH+AgAB/wIAAf8CAAH/AgAB/wIAAfwCAAH/AgABuwIA
        AQACAAECAgABAAAAAAAAAAAAAgABAAIAAQQCAAEAAgABoAIAAf8CAAH7AgAB/wIAAf8CAAH/AgAB/wIA
        Af0CAAH/AgABzgIAAQMCAAEAAgABUwIAAf0CAAH/AgAB/AIAAf4CAAH/AgAB/wIAAf8CAAH/AgAB+wIA
        Af8CAAGgAgABAAIAAQQCAAEAAAAAAAAAAAACAAEAAgABBAIAAQACAAGDAgAB/wIAAfsCAAH/AgAB/wIA
        Af8CAAH/AgAB/gIAAf8CAAH3AgABEgIAAUYCAAH9AgAB/gIAAfwCAAH+AgAB/gIAAf8CAAH/AgAB/wIA
        Af8CAAH7AgAB/wIAAYMCAAEAAgABBAIAAQAAAAAAAAAAAAIAAQACAAEEAgABAAIAAWYCAAH/AgAB+gIA
        AfwCAAH8AgAB/QIAAfwCAAH/AgAB/wIAAf8CAAGMAgAB6wIAAf8CAAH6AgAB/wIAAbgCAAGvAgAB/wIA
        AfoCAAH7AgAB/AIAAfkCAAH/AgABZgIAAQACAAEEAgABAAAAAAAAAAAAAgABAAIAAQMCAAEAAgABSwIA
        Af8CAAH8AgAB/wIAAf8CAAH/AgAB/gIAAf8CAAH/AgAB/wIAAf8CAAH9AgAB+wIAAf8CAAHdAgABBgIA
        AYUCAAH/AgAB+wIAAf8CAAH/AgAB/AIAAf8CAAFLAgABAAIAAQMCAAEAAAAAAAAAAAAAAAAAAgABAQIA
        AQACAAEUAgABWwIAAbkCAAFaAgABUwIAAZECAAGOAgAB/QIAAf8CAAH/AgAB/QIAAf0CAAH/AgAB6AIA
        ASgCAAEAAgABKwIAAWQCAAGRAgABQgIAAUsCAAGfAgABWwIAARUCAAEAAgABAQAAAAAAAAAAAAAAAAAA
        AAACAAEAAgABAAIAAQMCAAEAAgABlAIAAa4CAAHLAgABpAIAARkCAAHqAgAB/wIAAf4CAAH+AgAB/wIA
        AfgCAAE5AgABAAIAAQQCAAEBAgABAAIAAYkCAAFuAgABbgIAAX0CAAEAAgABAwMAAQACAAEAAAAAAAAA
        AAAAAAAAAAAAAAIAAQACAAEAAgABAwIAAQACAAEwAgAB8gIAAf8CAAG3AgABAAIAAcACAAH/AgAB/AIA
        Af4CAAH/AgAB6gIAARECAAEAAgABAwIAAQUCAAEAAgABcAIAAf8CAAH/AgABeQIAAQACAAEFAgABAAIA
        AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAEAAgABAgIAAQACAAG0AgAB/wIAAd0CAAEAAgABgwIA
        Af8CAAH7AgAB/wIAAf0CAAH/AgABQAIAAQACAAEDAgABBQIAAYICAAHzAgAB+QIAAf8CAAF3AgABAAIA
        AQQCAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQACAAEEAgABAAIAAXsCAAH/AgAB/gIA
        AR4CAAFCAgAB/wIAAf0CAAH/AgAB+wIAAf8CAAF4AgABAAIAATcCAAHSAgAB/wIAAf8CAAH1AgABcgIA
        AQECAAAAAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQMCAAEAAgABQAIA
        Af8CAAH/AgABVwIAAQsCAAH4AgAB/wIAAf4CAAH8AgAB/wIAAaoCAAEJAgAB6QIAAf8CAAH/AgABugIA
        ASMCAAEAAgABAiwAHQACAAEAAQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAQIA
        AQACAAESAgAB5gIAAf8CAAGwAgABAAIAAccCAAH/AgAB/AIAAf0CAAH/AgAB0QIAAZICAAH/AgAB/wIA
        AXACAAEAAgABAQIAAQQCAAEBAgABAAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAACAAEAAgABAgIAAQACAAG4AgAB/wIAAf8CAAGwAgABqgIAAf8CAAH8AgAB/wIAAf8CAAH8AgAB9wIA
        Af8CAAG8AgABAAIAAQMCAAEDAgABAAIAAQACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAIAAQACAAECAgABAAIAASgCAAHWAgAB/wIAAf0CAAH7AgAB/wIAAf8CAAH/AgAB/wIA
        Af4CAAH8AgAB/wIAAUICAAEAAgABAwIAAQACAAEAAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQACAAEBAgABAAIAAQwCAAGpAgAB/wIAAfwCAAH9AgAB/wIA
        Af8CAAH/AgAB/AIAAf8CAAGxAgABAAIAAQICAAEAAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIAAQACAAECAgABAgIAAQACAAF1AgAB/gIA
        Af4CAAH7AgAB/wIAAf4CAAH8AgAB/wIAATgCAAEAAgABAgIAAQACAAEAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIAAQACAAEBAgABBAIA
        AQACAAFCAgAB6AIAAf8CAAH+AgAB/AIAAf8CAAGlAgABAAIAAQMCAAEAAgABAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIA
        AQACAAEAAgABBAIAAQACAAEcAgABuwIAAf0CAAHzAgABrQIAARMCAAEAAgABAQIAAQACAAEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAgABAAIAAQACAAEAAgABAwIAAQICAAEAAgABMQIAAW8CAAE1AgABAAIAAQECAAEAAgABAAIA
        AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQACAAECAgABAAIAATMCAAHcAgAB/wIAAf8CAAG7AgABCgIA
        AQACAAEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQECAAEAAgABwAIAAf8CAAH8AgAB+gIA
        Af8CAAFyAgABAAIAAQQCAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEBAgABAAIAAQUCAAHcAgAB/wIA
        Af0CAAH6AgAB/wIAAZkCAAEAAgABBAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAEDAgABAAIA
        AZsCAAH/AgAB+wIAAf0CAAH/AgABVQIAAQACAAEDAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgACAAIA
        AQECAAEAAgABDwIAAa4CAAH/AgAB9AIAAXoCAAEAAgABAQIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA5Cegv+grIL/oFSCHpAEghaQKQaWgBEAFoARABbACQA2QAoAJkAEACZAA
        AAnQAAAL0AAAC9AAEAvEACQr1CAkK+IgIC/yACAv8gAAr/oQAi/5AASf+QAFf/qACP/9IAn//pAR//9I
        E///kiP//+QL///kCf//6An//+QL///0E/8=
</value>
  </data>
</root>