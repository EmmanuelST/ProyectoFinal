<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAHkVAAB5FQAAAAAAAAAA
        AAACAgIuAgIC/AICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wIC
        Av8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wIC
        Av8CAgL8AgICLgICAiECAgL0AgIC/wICAv4CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wIC
        Av8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv4CAgL7AgIC+wICAvsCAgL7AgIC+wICAvsCAgL7AgIC/QIC
        Av8CAgL+AgIC/wICAvQCAgIhAgICCwICAuACAgL/AgIC/QICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wIC
        Av8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wIC
        Av8CAgL/AgIC/wICAv0CAgL/AgIC3wICAgsCAgIAAgICuAICAv8CAgL8AgIC/wICAv8CAgL/AgIC/wIC
        Av8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/QICAv8CAgLdAgICWgICAl4CAgJeAgICXgIC
        Al4CAgJgAgICVAICApQCAgL/AgIC+gICAv8CAgK4AgICAAICAgACAgJ3AgIC/wICAvsCAgL/AgIC/wIC
        Av8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL8AgIC/wICAsoCAgIAAgICAQIC
        AgAAAAAAAAAAAAICAgQCAgIAAgICVQICAv8CAgL4AgIC/wICAnYCAgIAAgICAAICAikCAgL7AgIC/wIC
        Av4CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wICAvwCAgL/AgICyxAQ
        EAACAgIHAgICBgICAgYCAgIGAgICCgICAgACAgJaAgIC/wICAvwCAgL7AgICKQICAgACAgICAgICAAIC
        Aq4CAgL/AgIC/AICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/AIC
        Av8CAgLKAgICAAICAgECAgIAAAAAAAAAAAACAgIEAgICAAICAlUCAgL/AgIC/wICAq4CAgIAAgICAgIC
        AgICAgIAAgICNQICAvwCAgL+AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wIC
        Av8CAgL9AgIC/wICAtMCAgImAgICLAICAisCAgIrAgICKwICAi4CAgIdAgICcgICAv8CAgL5AgICNQIC
        AgACAgICAgICAAICAgMCAgIAAgICigICAv8CAgL6AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wIC
        Av8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL6AgIC/wIC
        AooCAgIAAgICAwICAgACAgIAAgICAQQEBAACAgIFAgICwQICAv8CAgL6AgIC/wICAv8CAgL/AgIC/wIC
        Av8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC+gIC
        Av8CAgLBAgICBQUFBQACAgIBAgICAAICAgACAgIAAgICAgICAgACAgIWAgIC0gICAv8CAgL6AgIC/gIC
        Av8CAgL/AgIC/wICAv8CAgL/AgIC/gICAv0CAgL9AgIC/gICAv8CAgL/AgIC/wICAv8CAgL/AgIC/gIC
        AvoCAgL/AgIC0gICAhYCAgIAAgICAgICAgACAgIAAAAAAAICAgACAgIAAgICAgICAgACAgIVAgICwwIC
        Av8CAgL8AgIC+wICAv4CAgL/AgIC/gICAvsCAgL/AgIC/wICAv8CAgL/AgIC+wICAv4CAgL/AgIC/gIC
        AvsCAgL8AgIC/wICAsQCAgIVAgICAAICAgICAgIAAgICAAAAAAAAAAAAAgICAAICAgACAgIAAgICAgIC
        AgECAgIFAgICigICAv0CAgL/AgIC/gICAvsCAgL+AgIC/wICAvoCAgLgAgIC4AICAvoCAgL/AgIC/gIC
        AvsCAgL+AgIC/wICAv0CAgKKAgICBQICAgECAgICAgICAAICAgACAgIAAAAAAAAAAAAAAAAAAgICAAIC
        AgACAgIAAgICAgICAgMCAgIAAgICMAICArECAgL6AgIC/wICAugCAgJlAgICGQICAhECAgIRAgICGQIC
        AmUCAgLoAgIC/wICAvoCAgKxAgICMAICAgACAgIDAgICAgICAgACAgIAAgICAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAgICAAICAgACAgIAAgICAQICAgMCAgIBAgICAAICAioCAgJtAgICIQICAlMCAgK7AgIC4gIC
        AuICAgK8AgICVAICAiECAgJuAgICKwICAgACAgIBAgICAwICAgECAgIAAgICAAICAgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAgACAgIAAgICAAICAgMCAgIEAgICAAICAhkCAgLJAgIC/wIC
        Av0CAgL/AgIC/wICAv0CAgL/AgICygICAhkCAgIAAgICBAICAgMCAgIAAgICAAICAgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAgACAgIAAgICAgICAgACAgIhAgIC5AIC
        Av8CAgL6AgIC/AICAv4CAgL+AgIC/AICAvoCAgL/AgIC5AICAiECAgIAAgICAgICAgACAgIAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICAAICAgACAgIBAgICAAIC
        ArkCAgL/AgIC+gICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wICAvoCAgL/AgICuAICAgACAgIBAgICAAIC
        AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIAAgICAwIC
        AgACAgJQAgIC/wICAvsCAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wICAvsCAgL/AgICUAIC
        AgACAgIDAgICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIC
        AgACAgICAgICAAICArICAgL/AgIC/AICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/AIC
        Av8CAgKyAgICAAICAgICAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAgICAQICAgACAgITAgIC7AICAv8CAgL+AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wIC
        Av8CAgL+AgIC/wICAusCAgITAgICAAICAgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAACAgIDAgICAAICAjQCAgL/AgIC/gICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wIC
        Av8CAgL/AgIC/wICAv8CAgL+AgIC/wICAjQCAgIAAgICAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAgMCAgIAAgICSQICAv8CAgL8AgIC/wICAv8CAgL/AgIC/wIC
        Av8CAgL/AgIC/wICAv8CAgL/AgIC/wICAvwCAgL/AgICSQICAgACAgIDAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICAwICAgACAgJKAgIC/wICAvwCAgL/AgIC/wIC
        Av8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/AICAv8CAgJJAgICAAICAgMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIDAgICAAICAjUCAgL/AgIC/gIC
        Av8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL+AgIC/wICAjUCAgIAAgICAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAgECAgIAAgICFAIC
        Au0CAgL/AgIC/gICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/gICAv8CAgLtAgICFAIC
        AgACAgIBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICAAIC
        AgICAgIAAgICtQICAv8CAgL8AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL8AgIC/wIC
        ArUCAgIAAgICAgICAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAACAgIAAgICAwICAgACAgJUAgIC/wICAvsCAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wIC
        AvsCAgL/AgICVAICAgACAgIDAgICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAICAgACAgIAAgICAQICAgACAgK9AgIC/wICAvoCAgL/AgIC/wICAv8CAgL/AgIC/wIC
        Av8CAgL6AgIC/wICAr0CAgIAAgICAQICAgACAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAgICAAICAgACAgICAgICAAICAiMCAgLnAgIC/wICAvsCAgL9AgIC/wIC
        Av8CAgL9AgIC+wICAv8CAgLnAgICIwICAgACAgICAgICAAICAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICAAICAgACAgICAgICAAICAikCAgLVAgIC/wIC
        Av4CAgL/AgIC/wICAv4CAgL/AgIC1QICAikCAgIAAgICAgICAgACAgIAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIAAgICAAICAgACAgICAgICAAIC
        AgwCAgJ6AgIC2gICAvsCAgL7AgIC2gICAnsCAgIMAgICAAICAgICAgIAAgICAAICAgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAYAAE0GAAABBQAATQkAAAAIgAAAEAAAAAFAA
        AAqoAAAV0AAAC+kAAJf0QAIv+SAEn/5AAn/8QAI//IABP/yAAT/9AAC//QAAv/0AAL/9AAC//QAAv/0A
        AL/8gAE//IABP/xAAj/+QAJ//qAFf/9QCv8=
</value>
  </data>
</root>