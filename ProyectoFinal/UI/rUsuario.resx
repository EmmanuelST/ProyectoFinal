<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFdXW0aZiWvVoY9u1aKQb9WikG7Vm4pu1VNXW0MAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAZzXC4Wp4JEKbSMQTO5lEo3r4pFMJd/RyAuLhcLU1VYVtqza//nuWP/6rxl/+u9Zf/ctm3/VlZcUAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH9fKhitfytYuIYsjsCM
        MbvFkTTezpk699WgPv/XokH/2qVF/9ypSf/fq0z/469P/+OxU/uvkFfx27Vw/+i7aP/rvmv/7cBr/9+6
        dP9WVllQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaJ3JE21gCW+vogl+8GK
        J//EjCn/x48r/8qTLv/NljL/0Zo3/9SfPf/YpET/26hK/96rTf/grk//47BR/7aUVv/atXD/57xs/+vA
        cP/swG7/37p1/2BdWF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACqeSORuoUn/ruE
        I/+9hyT/wIkm/8OMKf/HkC3/ypQy/82YNv/Qmzn/0548/9ahP//ZpEP/3alM/+CtUf/isFP/tZRW/9m0
        b//mumr/6b5u/+u/bf/euXT/vZ9i9tOuXVIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdVgnGriE
        KP29ijL/u4Ul/7yFJP+/iCb/w40s/8eRMf/KlTb/zZg6/9CcPf/Tn0D/ropK/6SFTv+lhk7/qIpU/6qM
        V/+QfFr/17Js/+S4Zf/nu2n/6bxp/9y3cf+XhF//qpFh6VZWW2dXV1xmV1dcZlZWWU0AAAAAAAAAAAAA
        AABwUSgZuYUt/r+OOv+8hyz/vIUk/7+JKf/Dji//xpI0/8mVOf/NmT3/0J1B/9OfRP+Zf1H/wpI8/8iY
        RP/Mnkv/1alZ/9uwYf/gs2H/4rRg/+W3Y//nuWT/6rxo/+m9bP/rvmr/57hh/+a1Wf/ntVb/lIJfwAAA
        AAAAAAAAAAAAAAAAAAKwfinfwJJB/72LM/+8hyn/v4kr/8KOMf/Gkjf/ypc8/82bQf/QnkX/06FJ/5l+
        UP/Aiyz/xZE0/8qWO//RoEf/2qpT/92tWP/gsVv/47Re/+a2X//ouF//6rle/+y6Xf/otFP/57BL/+ix
        SP+Wgl7AAAAAAAAAAAAAAAAAAAAAAKZzHo3AkkP/v5A8/76LMv++ii7/wo4z/8aTOf/KmD//zZxF/9Cg
        Sf/To0z/l31P/76HKP/CjTD/x5M3/8uYPf/WpEz/26pT/96uVv/hsVn/47Na/+a1Wv/otlr/6rdZ/+Ww
        Tv/krkf/5q5F/5SAW8AAAAAAAAAAAAAAAAAAAAAAiWAiJbiHM/rClEX/wJA7/7+MM//BjzX/xZQ8/8mY
        Qv/NnEf/z6BM/9KkUP+WfE7/u4Ql/7+KK//EjzH/yJQ4/8yZPv/WpEr/26pR/96tU//hr1X/47FV/+ay
        Vf/ntFT/4KpG/+KqQ//jq0H/k35YwAAAAAAAAAAAAAAAAAAAAAAAAAAAqHYhmcKVR//ClET/wZE8/8KP
        N//FlD3/yZhD/8ydSf/PoU//06VU/494UP+ofzb/rII6/6+GPv+yikP/to1H/8yaQf/Tn0P/2aZL/96r
        T//frlX/yqNb/8mgVv/Fm07/xZpL/8WaSv+GdFjAAAAAAAAAAAAAAAAAAAAAAAAAAAB4Wh4Rs4Mw2cSX
        S//ClEP/wpE8/8SUPv/ImET/zJ1L/9CjVP/Xrmb/waNt/7ufbf+6nGX/uJZX/7mUUv+agVX/wpRC/82Y
        Ov/RnD3/1aBA/8ygTv9UVFh5S0tPPUtLTz1LS089S0tPPUlJTy0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACOaSUit4c12sSXSf/DlEP/xJM+/8iZR//Ytnn/2cCU/9XEpf/Qwqr/zsCm/9G/n//exJX/479+/7CQ
        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
        A///wAP//8AD///gB///4Af///gf//////8=
</value>
  </data>
</root>